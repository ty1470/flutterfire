name: FlutterFire

packages:
  - packages/**

scripts:
  lint:all:
    run: melos run analyze && melos run format
    description: Run all static analysis checks

  analyze:
    run: |
      melos exec -c 5 --fail-fast -- \
        dart analyze .
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  format:
    run: dart pub global run flutter_plugin_tools format
    description: |
      Build a specific example app for Android.
       - Requires `flutter_plugin_tools` (`pub global activate flutter_plugin_tools`).
       - Requires `clang-format` (can be installed via Brew on macOS).

  build:all:
    run: |
      melos run build:example_ios_pub --no-select && melos run build:example_android_pub --no-select && melos bootstrap
    description: Build all example apps (currently ios and android, macos requires flutter channel master)

  build:example_android:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build apk --no-pub"
    description: Build a specific example app for Android.
    select-package:
      dir-exists:
        - android
      scope: "*example*"
      ignore: "*firebase_ml_custom*"

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_android_pub:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build apk"
    description: Build a specific example app for Android.
    select-package:
      dir-exists:
        - android
      scope: "*example*"
      ignore: "*firebase_ml_custom*"

  build:example_ios:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build ios --no-codesign --no-pub"
    description: Build a specific example app for iOS.
    select-package:
      dir-exists:
        - ios
      scope: "*example*"
      ignore: "*firebase_ml_custom*"

  # melos bootstrap does not generate all files generated by a build that runs
  # `pub get`, and `flutter drive` does not either, so it is still necessary to
  # build sometimes without the `--no-pub` switch. Careful: `melos bootstrap` after.
  build:example_ios_pub:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build ios --no-codesign"
    description: Build a specific example app for iOS.
    select-package:
      dir-exists:
        - ios
      scope: "*example*"
      ignore: "*firebase_ml_custom*"

  build:example_macos:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter build macos --no-pub"
    description: |
      Build a specific example app for macOS.
       - Requires `flutter channel master`.
       - Requires `flutter config --enable-macos-desktop` set.
    select-package:
      dir-exists:
        - macos
      scope: "*example*"

  test:all:
    run: melos run test --no-select && melos run test:mobile_e2e --no-select
    description: Run all tests available on stable channel

  test:
    run: |
      melos exec -c 6 --fail-fast -- \
        "flutter test --no-pub"
    description: Run `flutter test` for a specific package.
    select-package:
      dir-exists:
        - test
      ignore:
        - "*web*"
        - "*example*"

  test:web:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter test --no-pub --platform=chrome"
    description: Run `flutter test --platform=chrome` for a specific '*web' package.
    select-package:
      dir-exists:
        - test
      scope: "*web*"

  test:mobile_e2e:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter drive --target=./test_driver/MELOS_PARENT_PACKAGE_NAME_e2e.dart"
    description: |
      Run all Android or iOS test driver e2e tests in a specific example app.
       - Requires an Android emulator or iOS simulator.
    select-package:
      dir-exists:
        - test_driver
      scope: "*example*"
      ignore:
        - "*firebase_ml_custom*"
        - "*firebase_ml_vision*"
        - "*firebase_admob*"

  test:web_e2e:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter drive -d web --no-pub --target=./test_driver/MELOS_PARENT_PACKAGE_NAME_e2e.dart"
    description: |
      Run all Web test driver e2e tests in a specific example app.
       - Requires `flutter channel master` (or beta).
       - Requires `flutter config --enable-web` set.
       - Requires chromedriver running on port 4444.
    select-package:
      dir-exists:
        - web
        - test_driver
      scope: "*example*"

  test:macos_e2e:
    run: |
      melos exec -c 1 --fail-fast -- \
        "flutter drive -d macos --no-pub --target=./test_driver/MELOS_PARENT_PACKAGE_NAME_e2e.dart"
    description: |
      Run all MacOS test driver e2e tests in a specific example app.
       - Requires `flutter channel master`.
       - Requires `flutter config --enable-macos-desktop` set.
    select-package:
      dir-exists:
        - macos
        - test_driver
      scope: "*example*"

  # Clean things very deeply, can be used to establish "pristine checkout" status
  clean:deep: >
    git clean -x -d -f -q

  # Additional cleanup lifecycle script, executed when `melos clean` is ran.
  postclean: >
    melos exec -c 6 -- "flutter clean"

  # Run all targets generally expected in CI for a full local quality check
  qualitycheck: >
    melos run clean:deep && melos clean && melos bootstrap && melos run lint:all && melos run build:all && melos run test:all

dev_dependencies:
  pedantic: 1.8.0

environment:
  sdk: ">=2.1.0 <3.0.0"
  flutter: ">=1.12.13+hotfix.5 <2.0.0"
